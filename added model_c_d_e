model_c = keras.Sequential([ 

keras.layers.Dense(16, input_shape=(784,), activation='sigmoid'), 

keras.layers.Dense(16, activation='sigmoid'), 

keras.layers.Dense(10, activation='sigmoid') 

]) 

 

model_c.compile(optimizer='adam',  

loss='sparse_categorical_crossentropy',  

metrics=['accuracy']) 

 

history_c= model_c.fit(X_train_flattened, y_train, epochs=10) 

 


model_d = keras.Sequential([ 

keras.layers.Dense(22, input_shape=(784,), activation='sigmoid'), # More neurons in 1st layer 

keras.layers.Dense(19, activation='sigmoid'), # 2nd layer 

keras.layers.Dense(11, activation='sigmoid'), # Additional layer 

keras.layers.Dense(10, activation='sigmoid') # Output layer 

]) 

 

model_d.compile(optimizer='adam',  

loss='sparse_categorical_crossentropy',  

metrics=['accuracy']) 

 

history_d=model_d.fit(X_train_flattened, y_train, epochs=5) 

 

 


model_e = keras.Sequential([ 

keras.layers.Dense(16, input_shape=(784,), activation='relu'), 

keras.layers.Dense(16, activation='relu'), 

keras.layers.Dense(10, activation='sigmoid') 

]) 

 

model_e.compile(optimizer='adam',  

loss='sparse_categorical_crossentropy',  

metrics=['accuracy']) 

 

history_e=model_e.fit(X_train_flattened, y_train, epochs=10) 

 
